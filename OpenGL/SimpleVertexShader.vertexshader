#version 330 core

layout(location = 0) in vec3 inPosition;  // Input vertex position

out vec3 retFragPos;  // Output world position to be interpolated in the fragment shader

uniform mat4 model;  // Model matrix to transform vertices
uniform mat4 view;   // View matrix
uniform mat4 projection;  // Projection matrix

void main()
{
    // Transform the vertex position to screen coordinates
    gl_Position = projection * view * model * vec4(inPosition, 1.0);
    
    // Pass the world position to the fragment shader
    retFragPos = vec3(model * vec4(inPosition, 1.0));
}

